version: "3.9"

services:
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    expose:
      - "5432"
    env_file:
      - .env.prod
    volumes:
      - db_volume_prod:/var/lib/postgresql/data
    environment:
      DB_PASSWORD: ${POSTGRES_PASSWORD}

  backend:
    build:
      context: backend
    command: uvicorn backend.src.main:app --reload --host 0.0.0.0 --port 8000
    env_file:
      - .env.prod
    expose:
      - "8000"
    depends_on:
      - db
      - redis
      - prometheus
      - grafana

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    expose:
      - "9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_volume_prod:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    volumes:
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasource.yml
      - grafana_volume_prod:/var/lib/grafana
    env_file:
      - .env.prod
    depends_on:
      - prometheus
    expose:
      - "3000"

  redis:
    image: redis:latest
    restart: unless-stopped
    expose:
      - "6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    env_file:
      - .env.prod
    volumes:
      - redis_volume_prod:/data

  frontend:
    build:
      context:
        frontend
      dockerfile:
        Dockerfile.prod
    env_file:
      - .env.prod
    depends_on:
      - backend
    volumes:
      - ./frontend/build:/home/app/MoneySaver/frontend/build

  nginx:
    image: nginx:latest
    restart: always
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./frontend/build:/var/www/html
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend



volumes:
  db_volume_prod:
  prometheus_volume_prod:
  grafana_volume_prod:
  redis_volume_prod:
